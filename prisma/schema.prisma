generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  Bid       Bid[]
  Deposit   Deposit[]
  Item      Item[]
}

model Item {
  id          Int        @id @default(autoincrement())
  userId      Int
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  origPrice   Int
  createdAt   DateTime   @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime   @updatedAt
  bidEndDate  DateTime
  status      ItemStatus @default(FOR_BID)
  Bid         Bid[]
  user        User       @relation(fields: [userId], references: [id])
}

model Deposit {
  id        Int       @id @default(autoincrement())
  userId    Int
  deposit   Int
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
}

model Bid {
  id        Int       @id @default(autoincrement())
  itemId    Int
  bidPrice  Int
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  updatedAt DateTime  @updatedAt
  userId    Int
  status    BidStatus @default(BID)
  item      Item      @relation(fields: [itemId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

enum BidStatus {
  BID
  WON
  LOST
}

enum ItemStatus {
  FOR_BID
  COMPLETED
}
